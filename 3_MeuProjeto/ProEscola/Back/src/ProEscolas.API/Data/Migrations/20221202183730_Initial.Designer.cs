// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProEscolas.API.Data;

namespace ProEscolas.API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221202183730_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("ProEscolas.API.Models.Aluno", b =>
                {
                    b.Property<int>("AlunoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnType("longtext");

                    b.Property<string>("Celular")
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext");

                    b.Property<string>("Cpf")
                        .HasColumnType("longtext");

                    b.Property<string>("DataNasc")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext");

                    b.Property<string>("Escolaridade")
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<string>("EstadoCivil")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rg")
                        .HasColumnType("longtext");

                    b.Property<string>("Sexo")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.HasKey("AlunoId");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            AlunoId = 1,
                            Bairro = "Centro",
                            Celular = "11922211111",
                            Cep = "11222-111",
                            Cidade = "Itu",
                            Cpf = "123.456.789-22",
                            DataNasc = "01/09/2000",
                            Email = "teste2@teste.com",
                            Endereco = "Rua AA",
                            Escolaridade = "Ensino Médio",
                            Estado = "SP",
                            EstadoCivil = "Casado",
                            Nome = "João",
                            Numero = 17,
                            Rg = "11.111.222-22",
                            Sexo = "M",
                            Telefone = "5555511111"
                        },
                        new
                        {
                            AlunoId = 2,
                            Bairro = "Centro",
                            Celular = "33911111111",
                            Cep = "31111-111",
                            Cidade = "Itu",
                            Cpf = "012.645.201-77",
                            DataNasc = "01/01/1990",
                            Email = "teste3@teste.com",
                            Endereco = "Rua M",
                            Escolaridade = "Ensino Superior",
                            Estado = "RJ",
                            EstadoCivil = "Solteiro",
                            Nome = "Marcio",
                            Numero = 15,
                            Rg = "33.111.111-11",
                            Sexo = "M",
                            Telefone = "3311111111"
                        });
                });

            modelBuilder.Entity("ProEscolas.API.Models.Aprazo", b =>
                {
                    b.Property<int>("AprazoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DtVencimento")
                        .HasColumnType("longtext");

                    b.Property<int>("MatriculaId")
                        .HasColumnType("int");

                    b.Property<int>("QtdeMensalidade")
                        .HasColumnType("int");

                    b.Property<double>("TaxaJuros")
                        .HasColumnType("double");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("AprazoId");

                    b.HasIndex("MatriculaId");

                    b.ToTable("Aprazos");

                    b.HasData(
                        new
                        {
                            AprazoId = 1,
                            DtVencimento = "05/05/2022",
                            MatriculaId = 1,
                            QtdeMensalidade = 3,
                            TaxaJuros = 5.5999999999999996,
                            Valor = 322.60000000000002
                        },
                        new
                        {
                            AprazoId = 2,
                            DtVencimento = "05/05/2022",
                            MatriculaId = 2,
                            QtdeMensalidade = 3,
                            TaxaJuros = 5.5999999999999996,
                            Valor = 322.60000000000002
                        });
                });

            modelBuilder.Entity("ProEscolas.API.Models.Avista", b =>
                {
                    b.Property<int>("AvistaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Agencia")
                        .HasColumnType("int");

                    b.Property<int>("MatriculaId")
                        .HasColumnType("int");

                    b.Property<int>("NCheque")
                        .HasColumnType("int");

                    b.Property<string>("PreData")
                        .HasColumnType("longtext");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("AvistaId");

                    b.HasIndex("MatriculaId");

                    b.ToTable("Avistas");
                });

            modelBuilder.Entity("ProEscolas.API.Models.Curso", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("int");

                    b.Property<string>("DataVigencia")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Programa")
                        .HasColumnType("longtext");

                    b.Property<string>("Sigla")
                        .HasColumnType("longtext");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.Property<double>("ValorHoraInstrutor")
                        .HasColumnType("double");

                    b.HasKey("CursoId");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            CursoId = 1,
                            CargaHoraria = 20,
                            DataVigencia = "02/03/2022",
                            Nome = "Analista",
                            Programa = "Planilhas",
                            Sigla = "AAA",
                            Valor = 850.29999999999995,
                            ValorHoraInstrutor = 125.3
                        },
                        new
                        {
                            CursoId = 2,
                            CargaHoraria = 30,
                            DataVigencia = "22/10/2022",
                            Nome = "Junior",
                            Programa = "Residêncial",
                            Sigla = "BBC",
                            Valor = 743.20000000000005,
                            ValorHoraInstrutor = 100.59999999999999
                        });
                });

            modelBuilder.Entity("ProEscolas.API.Models.Instrutor", b =>
                {
                    b.Property<int>("InstrutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AreaAtuacao")
                        .HasColumnType("longtext");

                    b.Property<string>("Bairro")
                        .HasColumnType("longtext");

                    b.Property<string>("Celular")
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext");

                    b.Property<string>("Cpf")
                        .HasColumnType("longtext");

                    b.Property<string>("DataNasc")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<string>("EstadoCivil")
                        .HasColumnType("longtext");

                    b.Property<string>("Formacao")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rg")
                        .HasColumnType("longtext");

                    b.Property<string>("Sexo")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.HasKey("InstrutorId");

                    b.ToTable("Instrutores");

                    b.HasData(
                        new
                        {
                            InstrutorId = 1,
                            AreaAtuacao = "Administração",
                            Bairro = "Centro",
                            Celular = "11911111111",
                            Cep = "11111-111",
                            Cidade = "Sorocaba",
                            Cpf = "1",
                            DataNasc = "01/01/2000",
                            Email = "teste1@teste.com",
                            Endereco = "Rua J",
                            Estado = "RJ",
                            EstadoCivil = "Solteiro",
                            Formacao = "Ensino Médio",
                            Nome = "Roberto",
                            Numero = 10,
                            Rg = "11.111.111-11",
                            Sexo = "M",
                            Telefone = "1111111111"
                        },
                        new
                        {
                            InstrutorId = 2,
                            AreaAtuacao = "Eletrecista",
                            Bairro = "Centro",
                            Celular = "22911111111",
                            Cep = "22222-111",
                            Cidade = "Jundiaí",
                            Cpf = "2",
                            DataNasc = "01/01/2001",
                            Email = "teste2@teste.com",
                            Endereco = "Rua A",
                            Estado = "SP",
                            EstadoCivil = "Solteiro",
                            Formacao = "Ensino Fundamental",
                            Nome = "Ana",
                            Numero = 101,
                            Rg = "11.111.111-22",
                            Sexo = "F",
                            Telefone = "2211111111"
                        });
                });

            modelBuilder.Entity("ProEscolas.API.Models.Matricula", b =>
                {
                    b.Property<int>("MatriculaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .HasColumnType("longtext");

                    b.Property<double>("Nota")
                        .HasColumnType("double");

                    b.Property<int>("QtdeFaltas")
                        .HasColumnType("int");

                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("MatriculaId");

                    b.HasIndex("AlunoId")
                        .IsUnique();

                    b.HasIndex("TurmaId");

                    b.ToTable("Matriculas");

                    b.HasData(
                        new
                        {
                            MatriculaId = 1,
                            AlunoId = 2,
                            Data = "02/12/2022 15:37:29",
                            Nota = 7.7999999999999998,
                            QtdeFaltas = 7,
                            TurmaId = 1
                        },
                        new
                        {
                            MatriculaId = 2,
                            AlunoId = 1,
                            Data = "02/12/2022 15:37:29",
                            Nota = 2.6000000000000001,
                            QtdeFaltas = 3,
                            TurmaId = 2
                        });
                });

            modelBuilder.Entity("ProEscolas.API.Models.Turma", b =>
                {
                    b.Property<int>("TurmaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<string>("DataInicio")
                        .HasColumnType("longtext");

                    b.Property<string>("DataTermino")
                        .HasColumnType("longtext");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<int>("InstrutorId")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .HasColumnType("longtext");

                    b.Property<string>("Periodo")
                        .HasColumnType("longtext");

                    b.Property<int>("QtdeVagas")
                        .HasColumnType("int");

                    b.Property<string>("SiglaTurma")
                        .HasColumnType("longtext");

                    b.HasKey("TurmaId");

                    b.HasIndex("CursoId");

                    b.HasIndex("InstrutorId");

                    b.ToTable("Turmas");

                    b.HasData(
                        new
                        {
                            TurmaId = 1,
                            CursoId = 1,
                            DataInicio = "02/02/2022",
                            DataTermino = "02/10/2022",
                            Descricao = "Analistas de Sistemas",
                            InstrutorId = 1,
                            Observacoes = "Terá um mês de férias.",
                            Periodo = "Manhã",
                            QtdeVagas = 20,
                            SiglaTurma = "AA10"
                        },
                        new
                        {
                            TurmaId = 2,
                            CursoId = 2,
                            DataInicio = "02/03/2022",
                            DataTermino = "02/06/2022",
                            Descricao = "Bolos e Confeitos",
                            InstrutorId = 2,
                            Observacoes = "Não terá um mês de férias.",
                            Periodo = "Tarde",
                            QtdeVagas = 5,
                            SiglaTurma = "BB01"
                        });
                });

            modelBuilder.Entity("ProEscolas.API.Models.Aprazo", b =>
                {
                    b.HasOne("ProEscolas.API.Models.Matricula", "Matricula")
                        .WithMany()
                        .HasForeignKey("MatriculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("ProEscolas.API.Models.Avista", b =>
                {
                    b.HasOne("ProEscolas.API.Models.Matricula", "Matricula")
                        .WithMany()
                        .HasForeignKey("MatriculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("ProEscolas.API.Models.Matricula", b =>
                {
                    b.HasOne("ProEscolas.API.Models.Aluno", "Aluno")
                        .WithOne("Matricula")
                        .HasForeignKey("ProEscolas.API.Models.Matricula", "AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProEscolas.API.Models.Turma", "Turma")
                        .WithMany("Matriculas")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("ProEscolas.API.Models.Turma", b =>
                {
                    b.HasOne("ProEscolas.API.Models.Curso", "Curso")
                        .WithMany("Turmas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProEscolas.API.Models.Instrutor", "Instrutor")
                        .WithMany("Turmas")
                        .HasForeignKey("InstrutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Instrutor");
                });

            modelBuilder.Entity("ProEscolas.API.Models.Aluno", b =>
                {
                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("ProEscolas.API.Models.Curso", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("ProEscolas.API.Models.Instrutor", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("ProEscolas.API.Models.Turma", b =>
                {
                    b.Navigation("Matriculas");
                });
#pragma warning restore 612, 618
        }
    }
}
